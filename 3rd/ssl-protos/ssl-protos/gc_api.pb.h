// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gc_api.proto

#ifndef PROTOBUF_INCLUDED_gc_5fapi_2eproto
#define PROTOBUF_INCLUDED_gc_5fapi_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "gc_state.pb.h"
#include "gc_change.pb.h"
#include "gc_engine.pb.h"
#include "gc_engine_config.pb.h"
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_gc_5fapi_2eproto 

namespace protobuf_gc_5fapi_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_gc_5fapi_2eproto
namespace ssl_protos {
namespace gc {
class Input;
class InputDefaultTypeInternal;
extern InputDefaultTypeInternal _Input_default_instance_;
class Output;
class OutputDefaultTypeInternal;
extern OutputDefaultTypeInternal _Output_default_instance_;
class Protocol;
class ProtocolDefaultTypeInternal;
extern ProtocolDefaultTypeInternal _Protocol_default_instance_;
class ProtocolEntry;
class ProtocolEntryDefaultTypeInternal;
extern ProtocolEntryDefaultTypeInternal _ProtocolEntry_default_instance_;
}  // namespace gc
}  // namespace ssl_protos
namespace google {
namespace protobuf {
template<> ::ssl_protos::gc::Input* Arena::CreateMaybeMessage<::ssl_protos::gc::Input>(Arena*);
template<> ::ssl_protos::gc::Output* Arena::CreateMaybeMessage<::ssl_protos::gc::Output>(Arena*);
template<> ::ssl_protos::gc::Protocol* Arena::CreateMaybeMessage<::ssl_protos::gc::Protocol>(Arena*);
template<> ::ssl_protos::gc::ProtocolEntry* Arena::CreateMaybeMessage<::ssl_protos::gc::ProtocolEntry>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ssl_protos {
namespace gc {

// ===================================================================

class Output : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssl_protos.gc.Output) */ {
 public:
  Output();
  virtual ~Output();

  Output(const Output& from);

  inline Output& operator=(const Output& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Output(Output&& from) noexcept
    : Output() {
    *this = ::std::move(from);
  }

  inline Output& operator=(Output&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Output& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Output* internal_default_instance() {
    return reinterpret_cast<const Output*>(
               &_Output_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Output* other);
  friend void swap(Output& a, Output& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Output* New() const final {
    return CreateMaybeMessage<Output>(NULL);
  }

  Output* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Output>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Output& from);
  void MergeFrom(const Output& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Output* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ssl_protos.gc.State match_state = 1;
  bool has_match_state() const;
  void clear_match_state();
  static const int kMatchStateFieldNumber = 1;
  private:
  const ::ssl_protos::gc::State& _internal_match_state() const;
  public:
  const ::ssl_protos::gc::State& match_state() const;
  ::ssl_protos::gc::State* release_match_state();
  ::ssl_protos::gc::State* mutable_match_state();
  void set_allocated_match_state(::ssl_protos::gc::State* match_state);

  // optional .ssl_protos.gc.GcState gc_state = 2;
  bool has_gc_state() const;
  void clear_gc_state();
  static const int kGcStateFieldNumber = 2;
  private:
  const ::ssl_protos::gc::GcState& _internal_gc_state() const;
  public:
  const ::ssl_protos::gc::GcState& gc_state() const;
  ::ssl_protos::gc::GcState* release_gc_state();
  ::ssl_protos::gc::GcState* mutable_gc_state();
  void set_allocated_gc_state(::ssl_protos::gc::GcState* gc_state);

  // optional .ssl_protos.gc.Protocol protocol = 3;
  bool has_protocol() const;
  void clear_protocol();
  static const int kProtocolFieldNumber = 3;
  private:
  const ::ssl_protos::gc::Protocol& _internal_protocol() const;
  public:
  const ::ssl_protos::gc::Protocol& protocol() const;
  ::ssl_protos::gc::Protocol* release_protocol();
  ::ssl_protos::gc::Protocol* mutable_protocol();
  void set_allocated_protocol(::ssl_protos::gc::Protocol* protocol);

  // optional .ssl_protos.gc.Config config = 4;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 4;
  private:
  const ::ssl_protos::gc::Config& _internal_config() const;
  public:
  const ::ssl_protos::gc::Config& config() const;
  ::ssl_protos::gc::Config* release_config();
  ::ssl_protos::gc::Config* mutable_config();
  void set_allocated_config(::ssl_protos::gc::Config* config);

  // @@protoc_insertion_point(class_scope:ssl_protos.gc.Output)
 private:
  void set_has_match_state();
  void clear_has_match_state();
  void set_has_gc_state();
  void clear_has_gc_state();
  void set_has_protocol();
  void clear_has_protocol();
  void set_has_config();
  void clear_has_config();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::ssl_protos::gc::State* match_state_;
  ::ssl_protos::gc::GcState* gc_state_;
  ::ssl_protos::gc::Protocol* protocol_;
  ::ssl_protos::gc::Config* config_;
  friend struct ::protobuf_gc_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Protocol : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssl_protos.gc.Protocol) */ {
 public:
  Protocol();
  virtual ~Protocol();

  Protocol(const Protocol& from);

  inline Protocol& operator=(const Protocol& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Protocol(Protocol&& from) noexcept
    : Protocol() {
    *this = ::std::move(from);
  }

  inline Protocol& operator=(Protocol&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Protocol& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Protocol* internal_default_instance() {
    return reinterpret_cast<const Protocol*>(
               &_Protocol_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Protocol* other);
  friend void swap(Protocol& a, Protocol& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Protocol* New() const final {
    return CreateMaybeMessage<Protocol>(NULL);
  }

  Protocol* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Protocol>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Protocol& from);
  void MergeFrom(const Protocol& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Protocol* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ssl_protos.gc.ProtocolEntry entry = 2;
  int entry_size() const;
  void clear_entry();
  static const int kEntryFieldNumber = 2;
  ::ssl_protos::gc::ProtocolEntry* mutable_entry(int index);
  ::google::protobuf::RepeatedPtrField< ::ssl_protos::gc::ProtocolEntry >*
      mutable_entry();
  const ::ssl_protos::gc::ProtocolEntry& entry(int index) const;
  ::ssl_protos::gc::ProtocolEntry* add_entry();
  const ::google::protobuf::RepeatedPtrField< ::ssl_protos::gc::ProtocolEntry >&
      entry() const;

  // optional bool delta = 1;
  bool has_delta() const;
  void clear_delta();
  static const int kDeltaFieldNumber = 1;
  bool delta() const;
  void set_delta(bool value);

  // @@protoc_insertion_point(class_scope:ssl_protos.gc.Protocol)
 private:
  void set_has_delta();
  void clear_has_delta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ssl_protos::gc::ProtocolEntry > entry_;
  bool delta_;
  friend struct ::protobuf_gc_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProtocolEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssl_protos.gc.ProtocolEntry) */ {
 public:
  ProtocolEntry();
  virtual ~ProtocolEntry();

  ProtocolEntry(const ProtocolEntry& from);

  inline ProtocolEntry& operator=(const ProtocolEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtocolEntry(ProtocolEntry&& from) noexcept
    : ProtocolEntry() {
    *this = ::std::move(from);
  }

  inline ProtocolEntry& operator=(ProtocolEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtocolEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtocolEntry* internal_default_instance() {
    return reinterpret_cast<const ProtocolEntry*>(
               &_ProtocolEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ProtocolEntry* other);
  friend void swap(ProtocolEntry& a, ProtocolEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtocolEntry* New() const final {
    return CreateMaybeMessage<ProtocolEntry>(NULL);
  }

  ProtocolEntry* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ProtocolEntry>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ProtocolEntry& from);
  void MergeFrom(const ProtocolEntry& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProtocolEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ssl_protos.gc.Change change = 2;
  bool has_change() const;
  void clear_change();
  static const int kChangeFieldNumber = 2;
  private:
  const ::ssl_protos::gc::Change& _internal_change() const;
  public:
  const ::ssl_protos::gc::Change& change() const;
  ::ssl_protos::gc::Change* release_change();
  ::ssl_protos::gc::Change* mutable_change();
  void set_allocated_change(::ssl_protos::gc::Change* change);

  // optional .google.protobuf.Duration match_time_elapsed = 3;
  bool has_match_time_elapsed() const;
  void clear_match_time_elapsed();
  static const int kMatchTimeElapsedFieldNumber = 3;
  private:
  const ::google::protobuf::Duration& _internal_match_time_elapsed() const;
  public:
  const ::google::protobuf::Duration& match_time_elapsed() const;
  ::google::protobuf::Duration* release_match_time_elapsed();
  ::google::protobuf::Duration* mutable_match_time_elapsed();
  void set_allocated_match_time_elapsed(::google::protobuf::Duration* match_time_elapsed);

  // optional .google.protobuf.Duration stage_time_elapsed = 4;
  bool has_stage_time_elapsed() const;
  void clear_stage_time_elapsed();
  static const int kStageTimeElapsedFieldNumber = 4;
  private:
  const ::google::protobuf::Duration& _internal_stage_time_elapsed() const;
  public:
  const ::google::protobuf::Duration& stage_time_elapsed() const;
  ::google::protobuf::Duration* release_stage_time_elapsed();
  ::google::protobuf::Duration* mutable_stage_time_elapsed();
  void set_allocated_stage_time_elapsed(::google::protobuf::Duration* stage_time_elapsed);

  // optional int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ssl_protos.gc.ProtocolEntry)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_change();
  void clear_has_change();
  void set_has_match_time_elapsed();
  void clear_has_match_time_elapsed();
  void set_has_stage_time_elapsed();
  void clear_has_stage_time_elapsed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::ssl_protos::gc::Change* change_;
  ::google::protobuf::Duration* match_time_elapsed_;
  ::google::protobuf::Duration* stage_time_elapsed_;
  ::google::protobuf::int32 id_;
  friend struct ::protobuf_gc_5fapi_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Input : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ssl_protos.gc.Input) */ {
 public:
  Input();
  virtual ~Input();

  Input(const Input& from);

  inline Input& operator=(const Input& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Input(Input&& from) noexcept
    : Input() {
    *this = ::std::move(from);
  }

  inline Input& operator=(Input&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Input& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Input* internal_default_instance() {
    return reinterpret_cast<const Input*>(
               &_Input_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Input* other);
  friend void swap(Input& a, Input& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Input* New() const final {
    return CreateMaybeMessage<Input>(NULL);
  }

  Input* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Input>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Input& from);
  void MergeFrom(const Input& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Input* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ssl_protos.gc.Change change = 1;
  bool has_change() const;
  void clear_change();
  static const int kChangeFieldNumber = 1;
  private:
  const ::ssl_protos::gc::Change& _internal_change() const;
  public:
  const ::ssl_protos::gc::Change& change() const;
  ::ssl_protos::gc::Change* release_change();
  ::ssl_protos::gc::Change* mutable_change();
  void set_allocated_change(::ssl_protos::gc::Change* change);

  // optional .ssl_protos.gc.Config config_delta = 3;
  bool has_config_delta() const;
  void clear_config_delta();
  static const int kConfigDeltaFieldNumber = 3;
  private:
  const ::ssl_protos::gc::Config& _internal_config_delta() const;
  public:
  const ::ssl_protos::gc::Config& config_delta() const;
  ::ssl_protos::gc::Config* release_config_delta();
  ::ssl_protos::gc::Config* mutable_config_delta();
  void set_allocated_config_delta(::ssl_protos::gc::Config* config_delta);

  // optional bool reset_match = 2;
  bool has_reset_match() const;
  void clear_reset_match();
  static const int kResetMatchFieldNumber = 2;
  bool reset_match() const;
  void set_reset_match(bool value);

  // @@protoc_insertion_point(class_scope:ssl_protos.gc.Input)
 private:
  void set_has_change();
  void clear_has_change();
  void set_has_reset_match();
  void clear_has_reset_match();
  void set_has_config_delta();
  void clear_has_config_delta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::ssl_protos::gc::Change* change_;
  ::ssl_protos::gc::Config* config_delta_;
  bool reset_match_;
  friend struct ::protobuf_gc_5fapi_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Output

// optional .ssl_protos.gc.State match_state = 1;
inline bool Output::has_match_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Output::set_has_match_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Output::clear_has_match_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ssl_protos::gc::State& Output::_internal_match_state() const {
  return *match_state_;
}
inline const ::ssl_protos::gc::State& Output::match_state() const {
  const ::ssl_protos::gc::State* p = match_state_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Output.match_state)
  return p != NULL ? *p : *reinterpret_cast<const ::ssl_protos::gc::State*>(
      &::ssl_protos::gc::_State_default_instance_);
}
inline ::ssl_protos::gc::State* Output::release_match_state() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.Output.match_state)
  clear_has_match_state();
  ::ssl_protos::gc::State* temp = match_state_;
  match_state_ = NULL;
  return temp;
}
inline ::ssl_protos::gc::State* Output::mutable_match_state() {
  set_has_match_state();
  if (match_state_ == NULL) {
    auto* p = CreateMaybeMessage<::ssl_protos::gc::State>(GetArenaNoVirtual());
    match_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.Output.match_state)
  return match_state_;
}
inline void Output::set_allocated_match_state(::ssl_protos::gc::State* match_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(match_state_);
  }
  if (match_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      match_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_state, submessage_arena);
    }
    set_has_match_state();
  } else {
    clear_has_match_state();
  }
  match_state_ = match_state;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.Output.match_state)
}

// optional .ssl_protos.gc.GcState gc_state = 2;
inline bool Output::has_gc_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Output::set_has_gc_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Output::clear_has_gc_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::ssl_protos::gc::GcState& Output::_internal_gc_state() const {
  return *gc_state_;
}
inline const ::ssl_protos::gc::GcState& Output::gc_state() const {
  const ::ssl_protos::gc::GcState* p = gc_state_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Output.gc_state)
  return p != NULL ? *p : *reinterpret_cast<const ::ssl_protos::gc::GcState*>(
      &::ssl_protos::gc::_GcState_default_instance_);
}
inline ::ssl_protos::gc::GcState* Output::release_gc_state() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.Output.gc_state)
  clear_has_gc_state();
  ::ssl_protos::gc::GcState* temp = gc_state_;
  gc_state_ = NULL;
  return temp;
}
inline ::ssl_protos::gc::GcState* Output::mutable_gc_state() {
  set_has_gc_state();
  if (gc_state_ == NULL) {
    auto* p = CreateMaybeMessage<::ssl_protos::gc::GcState>(GetArenaNoVirtual());
    gc_state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.Output.gc_state)
  return gc_state_;
}
inline void Output::set_allocated_gc_state(::ssl_protos::gc::GcState* gc_state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(gc_state_);
  }
  if (gc_state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gc_state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gc_state, submessage_arena);
    }
    set_has_gc_state();
  } else {
    clear_has_gc_state();
  }
  gc_state_ = gc_state;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.Output.gc_state)
}

// optional .ssl_protos.gc.Protocol protocol = 3;
inline bool Output::has_protocol() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Output::set_has_protocol() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Output::clear_has_protocol() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Output::clear_protocol() {
  if (protocol_ != NULL) protocol_->Clear();
  clear_has_protocol();
}
inline const ::ssl_protos::gc::Protocol& Output::_internal_protocol() const {
  return *protocol_;
}
inline const ::ssl_protos::gc::Protocol& Output::protocol() const {
  const ::ssl_protos::gc::Protocol* p = protocol_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Output.protocol)
  return p != NULL ? *p : *reinterpret_cast<const ::ssl_protos::gc::Protocol*>(
      &::ssl_protos::gc::_Protocol_default_instance_);
}
inline ::ssl_protos::gc::Protocol* Output::release_protocol() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.Output.protocol)
  clear_has_protocol();
  ::ssl_protos::gc::Protocol* temp = protocol_;
  protocol_ = NULL;
  return temp;
}
inline ::ssl_protos::gc::Protocol* Output::mutable_protocol() {
  set_has_protocol();
  if (protocol_ == NULL) {
    auto* p = CreateMaybeMessage<::ssl_protos::gc::Protocol>(GetArenaNoVirtual());
    protocol_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.Output.protocol)
  return protocol_;
}
inline void Output::set_allocated_protocol(::ssl_protos::gc::Protocol* protocol) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete protocol_;
  }
  if (protocol) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      protocol = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, protocol, submessage_arena);
    }
    set_has_protocol();
  } else {
    clear_has_protocol();
  }
  protocol_ = protocol;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.Output.protocol)
}

// optional .ssl_protos.gc.Config config = 4;
inline bool Output::has_config() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Output::set_has_config() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Output::clear_has_config() {
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::ssl_protos::gc::Config& Output::_internal_config() const {
  return *config_;
}
inline const ::ssl_protos::gc::Config& Output::config() const {
  const ::ssl_protos::gc::Config* p = config_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Output.config)
  return p != NULL ? *p : *reinterpret_cast<const ::ssl_protos::gc::Config*>(
      &::ssl_protos::gc::_Config_default_instance_);
}
inline ::ssl_protos::gc::Config* Output::release_config() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.Output.config)
  clear_has_config();
  ::ssl_protos::gc::Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::ssl_protos::gc::Config* Output::mutable_config() {
  set_has_config();
  if (config_ == NULL) {
    auto* p = CreateMaybeMessage<::ssl_protos::gc::Config>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.Output.config)
  return config_;
}
inline void Output::set_allocated_config(::ssl_protos::gc::Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_);
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    set_has_config();
  } else {
    clear_has_config();
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.Output.config)
}

// -------------------------------------------------------------------

// Protocol

// optional bool delta = 1;
inline bool Protocol::has_delta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Protocol::set_has_delta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Protocol::clear_has_delta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Protocol::clear_delta() {
  delta_ = false;
  clear_has_delta();
}
inline bool Protocol::delta() const {
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Protocol.delta)
  return delta_;
}
inline void Protocol::set_delta(bool value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:ssl_protos.gc.Protocol.delta)
}

// repeated .ssl_protos.gc.ProtocolEntry entry = 2;
inline int Protocol::entry_size() const {
  return entry_.size();
}
inline void Protocol::clear_entry() {
  entry_.Clear();
}
inline ::ssl_protos::gc::ProtocolEntry* Protocol::mutable_entry(int index) {
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.Protocol.entry)
  return entry_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::ssl_protos::gc::ProtocolEntry >*
Protocol::mutable_entry() {
  // @@protoc_insertion_point(field_mutable_list:ssl_protos.gc.Protocol.entry)
  return &entry_;
}
inline const ::ssl_protos::gc::ProtocolEntry& Protocol::entry(int index) const {
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Protocol.entry)
  return entry_.Get(index);
}
inline ::ssl_protos::gc::ProtocolEntry* Protocol::add_entry() {
  // @@protoc_insertion_point(field_add:ssl_protos.gc.Protocol.entry)
  return entry_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ssl_protos::gc::ProtocolEntry >&
Protocol::entry() const {
  // @@protoc_insertion_point(field_list:ssl_protos.gc.Protocol.entry)
  return entry_;
}

// -------------------------------------------------------------------

// ProtocolEntry

// optional int32 id = 1;
inline bool ProtocolEntry::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProtocolEntry::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProtocolEntry::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProtocolEntry::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ProtocolEntry::id() const {
  // @@protoc_insertion_point(field_get:ssl_protos.gc.ProtocolEntry.id)
  return id_;
}
inline void ProtocolEntry::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:ssl_protos.gc.ProtocolEntry.id)
}

// optional .ssl_protos.gc.Change change = 2;
inline bool ProtocolEntry::has_change() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProtocolEntry::set_has_change() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProtocolEntry::clear_has_change() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ssl_protos::gc::Change& ProtocolEntry::_internal_change() const {
  return *change_;
}
inline const ::ssl_protos::gc::Change& ProtocolEntry::change() const {
  const ::ssl_protos::gc::Change* p = change_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.ProtocolEntry.change)
  return p != NULL ? *p : *reinterpret_cast<const ::ssl_protos::gc::Change*>(
      &::ssl_protos::gc::_Change_default_instance_);
}
inline ::ssl_protos::gc::Change* ProtocolEntry::release_change() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.ProtocolEntry.change)
  clear_has_change();
  ::ssl_protos::gc::Change* temp = change_;
  change_ = NULL;
  return temp;
}
inline ::ssl_protos::gc::Change* ProtocolEntry::mutable_change() {
  set_has_change();
  if (change_ == NULL) {
    auto* p = CreateMaybeMessage<::ssl_protos::gc::Change>(GetArenaNoVirtual());
    change_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.ProtocolEntry.change)
  return change_;
}
inline void ProtocolEntry::set_allocated_change(::ssl_protos::gc::Change* change) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(change_);
  }
  if (change) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      change = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, change, submessage_arena);
    }
    set_has_change();
  } else {
    clear_has_change();
  }
  change_ = change;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.ProtocolEntry.change)
}

// optional .google.protobuf.Duration match_time_elapsed = 3;
inline bool ProtocolEntry::has_match_time_elapsed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProtocolEntry::set_has_match_time_elapsed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProtocolEntry::clear_has_match_time_elapsed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::google::protobuf::Duration& ProtocolEntry::_internal_match_time_elapsed() const {
  return *match_time_elapsed_;
}
inline const ::google::protobuf::Duration& ProtocolEntry::match_time_elapsed() const {
  const ::google::protobuf::Duration* p = match_time_elapsed_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.ProtocolEntry.match_time_elapsed)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ProtocolEntry::release_match_time_elapsed() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.ProtocolEntry.match_time_elapsed)
  clear_has_match_time_elapsed();
  ::google::protobuf::Duration* temp = match_time_elapsed_;
  match_time_elapsed_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ProtocolEntry::mutable_match_time_elapsed() {
  set_has_match_time_elapsed();
  if (match_time_elapsed_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    match_time_elapsed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.ProtocolEntry.match_time_elapsed)
  return match_time_elapsed_;
}
inline void ProtocolEntry::set_allocated_match_time_elapsed(::google::protobuf::Duration* match_time_elapsed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(match_time_elapsed_);
  }
  if (match_time_elapsed) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(match_time_elapsed)->GetArena();
    if (message_arena != submessage_arena) {
      match_time_elapsed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_time_elapsed, submessage_arena);
    }
    set_has_match_time_elapsed();
  } else {
    clear_has_match_time_elapsed();
  }
  match_time_elapsed_ = match_time_elapsed;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.ProtocolEntry.match_time_elapsed)
}

// optional .google.protobuf.Duration stage_time_elapsed = 4;
inline bool ProtocolEntry::has_stage_time_elapsed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProtocolEntry::set_has_stage_time_elapsed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProtocolEntry::clear_has_stage_time_elapsed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::google::protobuf::Duration& ProtocolEntry::_internal_stage_time_elapsed() const {
  return *stage_time_elapsed_;
}
inline const ::google::protobuf::Duration& ProtocolEntry::stage_time_elapsed() const {
  const ::google::protobuf::Duration* p = stage_time_elapsed_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.ProtocolEntry.stage_time_elapsed)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ProtocolEntry::release_stage_time_elapsed() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.ProtocolEntry.stage_time_elapsed)
  clear_has_stage_time_elapsed();
  ::google::protobuf::Duration* temp = stage_time_elapsed_;
  stage_time_elapsed_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ProtocolEntry::mutable_stage_time_elapsed() {
  set_has_stage_time_elapsed();
  if (stage_time_elapsed_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArenaNoVirtual());
    stage_time_elapsed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.ProtocolEntry.stage_time_elapsed)
  return stage_time_elapsed_;
}
inline void ProtocolEntry::set_allocated_stage_time_elapsed(::google::protobuf::Duration* stage_time_elapsed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(stage_time_elapsed_);
  }
  if (stage_time_elapsed) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(stage_time_elapsed)->GetArena();
    if (message_arena != submessage_arena) {
      stage_time_elapsed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stage_time_elapsed, submessage_arena);
    }
    set_has_stage_time_elapsed();
  } else {
    clear_has_stage_time_elapsed();
  }
  stage_time_elapsed_ = stage_time_elapsed;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.ProtocolEntry.stage_time_elapsed)
}

// -------------------------------------------------------------------

// Input

// optional .ssl_protos.gc.Change change = 1;
inline bool Input::has_change() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Input::set_has_change() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Input::clear_has_change() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::ssl_protos::gc::Change& Input::_internal_change() const {
  return *change_;
}
inline const ::ssl_protos::gc::Change& Input::change() const {
  const ::ssl_protos::gc::Change* p = change_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Input.change)
  return p != NULL ? *p : *reinterpret_cast<const ::ssl_protos::gc::Change*>(
      &::ssl_protos::gc::_Change_default_instance_);
}
inline ::ssl_protos::gc::Change* Input::release_change() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.Input.change)
  clear_has_change();
  ::ssl_protos::gc::Change* temp = change_;
  change_ = NULL;
  return temp;
}
inline ::ssl_protos::gc::Change* Input::mutable_change() {
  set_has_change();
  if (change_ == NULL) {
    auto* p = CreateMaybeMessage<::ssl_protos::gc::Change>(GetArenaNoVirtual());
    change_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.Input.change)
  return change_;
}
inline void Input::set_allocated_change(::ssl_protos::gc::Change* change) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(change_);
  }
  if (change) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      change = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, change, submessage_arena);
    }
    set_has_change();
  } else {
    clear_has_change();
  }
  change_ = change;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.Input.change)
}

// optional bool reset_match = 2;
inline bool Input::has_reset_match() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Input::set_has_reset_match() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Input::clear_has_reset_match() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Input::clear_reset_match() {
  reset_match_ = false;
  clear_has_reset_match();
}
inline bool Input::reset_match() const {
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Input.reset_match)
  return reset_match_;
}
inline void Input::set_reset_match(bool value) {
  set_has_reset_match();
  reset_match_ = value;
  // @@protoc_insertion_point(field_set:ssl_protos.gc.Input.reset_match)
}

// optional .ssl_protos.gc.Config config_delta = 3;
inline bool Input::has_config_delta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Input::set_has_config_delta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Input::clear_has_config_delta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::ssl_protos::gc::Config& Input::_internal_config_delta() const {
  return *config_delta_;
}
inline const ::ssl_protos::gc::Config& Input::config_delta() const {
  const ::ssl_protos::gc::Config* p = config_delta_;
  // @@protoc_insertion_point(field_get:ssl_protos.gc.Input.config_delta)
  return p != NULL ? *p : *reinterpret_cast<const ::ssl_protos::gc::Config*>(
      &::ssl_protos::gc::_Config_default_instance_);
}
inline ::ssl_protos::gc::Config* Input::release_config_delta() {
  // @@protoc_insertion_point(field_release:ssl_protos.gc.Input.config_delta)
  clear_has_config_delta();
  ::ssl_protos::gc::Config* temp = config_delta_;
  config_delta_ = NULL;
  return temp;
}
inline ::ssl_protos::gc::Config* Input::mutable_config_delta() {
  set_has_config_delta();
  if (config_delta_ == NULL) {
    auto* p = CreateMaybeMessage<::ssl_protos::gc::Config>(GetArenaNoVirtual());
    config_delta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:ssl_protos.gc.Input.config_delta)
  return config_delta_;
}
inline void Input::set_allocated_config_delta(::ssl_protos::gc::Config* config_delta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_delta_);
  }
  if (config_delta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config_delta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_delta, submessage_arena);
    }
    set_has_config_delta();
  } else {
    clear_has_config_delta();
  }
  config_delta_ = config_delta;
  // @@protoc_insertion_point(field_set_allocated:ssl_protos.gc.Input.config_delta)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gc
}  // namespace ssl_protos

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_gc_5fapi_2eproto
